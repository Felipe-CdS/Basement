package activity_views

import (
	"nugu.dev/basement/pkg/models"
	"strconv"
	"strings"
	"time"
)

templ DetailedLog(d time.Time, log []models.Activity, tags []models.Tag) {
	<div id="detailed-log-section">
		<div class="flex justify-between items-center">
			<h2 class="heading-primary">
				/ Day Stats - { formatDate(d, time.RFC1123) }
			</h2>
			<button
				@click="$refs.editDialog.showModal()"
				class="py-0.5 px-2 border border-white"
			>
				Add new entry
			</button>
		</div>
		if len(log) != 0 {
			for i, l := range log {
				<h2 class="mt-3 text-lg font-semibold">
					#{ strconv.Itoa(i) }) 
					{ l.StartTime.Format(time.Kitchen) }
					- { l.EndTime.Format(time.Kitchen) }
					| { l.Title }
				</h2>
				<p class="my-2 w-full text-justify indent-10">
					{ l.Description }
				</p>
				<p class="mb-3">
					Tags: 
					for _, a := range l.Tags {
						<span>{ a.Name } | </span>
					}
				</p>
				<hr class="mb-0.5 hr-divider-dashed"/>
				<hr class="hr-divider-dashed"/>
			}
		} else {
			<p>No info for this day...</p>
		}
		@EditDailyLogModal(d, tags)
	</div>
}

func formatDate(d time.Time, timeFormat string) string {
	holder := d.Format(timeFormat)
	return strings.TrimSuffix(holder, " 00:00:00 UTC")
}
