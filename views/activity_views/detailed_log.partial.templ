package activity_views

import (
	"nugu.dev/basement/pkg/models"
	"strconv"
	"strings"
	"time"
)

templ DetailedLog(d time.Time, log []models.Activity, tags []models.Tag, loggedUser bool) {
	<div id="detailed-log-section">
		<div class="flex justify-between items-center">
			<h2 class="heading-primary">
				/ Day Stats - { formatDate(d, time.RFC1123) }
			</h2>
			if loggedUser {
				<button
					@click="$refs.editDialog.showModal()"
					class="py-0.5 px-2 border border-white"
				>
					Add new entry
				</button>
			}
		</div>
		if len(log) != 0 {
			for i, l := range log {
				<div class="flex justify-between items-center mt-5 w-full">
					<h2 class="text-lg font-semibold">
						#{ strconv.Itoa(i+1) }) 
						{ l.StartTime.Format(time.Kitchen) }
						- { l.EndTime.Format(time.Kitchen) }
						| { l.Title }
					</h2>
					if loggedUser {
						<button>
							<img class="invert" src="assets/img/edit.svg"/>
						</button>
					}
				</div>
				<p class="my-2 w-full text-justify indent-10">
					if l.Description != "" {
						{ l.Description }
					} else {
						<span class="italic">
							No Description provided.
						</span>
					}
				</p>
				<div class="flex justify-between w-full">
					<p class="mb-5">
						Tags: 
						for i, a := range l.Tags {
							<span>
								{ a.Name }
								if i != len(l.Tags) -1 {
									| 
								}
							</span>
						}
					</p>
				</div>
				<hr class="mb-0.5 hr-divider-dashed"/>
				<hr class="hr-divider-dashed"/>
			}
		} else {
			<p>No info for this day...</p>
		}
		@EditDailyLogModal(d, tags)
	</div>
}

func formatDate(d time.Time, timeFormat string) string {
	holder := d.Format(timeFormat)
	return strings.TrimSuffix(holder, " 00:00:00 UTC")
}
